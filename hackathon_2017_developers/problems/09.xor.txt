Задан массив A из N чисел.
Необходимо переставить числа в массиве таким образом, чтобы получить максимальное значение функции F(A):
1) для каждого из возможных подотрезков массива A вычисляем XOR его элементов
2) вычисляем XOR всех полученных на предыдущем шаге чисел
Код на C++, реализующий функцию F:
uint32_t Func(const std::vector<uint32_t>& a)
{
    uint32_t ans = 0;
    for (size_t i = 0; i < a.size(); i++)
    {
        for (size_t j = i; j < a.size(); j++)
        {
            uint32_t d = 0;
            for (size_t k = i; k <= j; k++)
            {
                d ^= a[k];
            }
            ans ^= d;
        }
    }
    return ans;
}

Входные данные:
Первая строка содержит число N, задающее количество чисел в массиве.
Вторая строка содержит N целых положительных чисел, разделенных пробелом. Количество чисел не превосходит 30, значения чисел не превосходят 50000.

Выходные данные:
Выведите максимально возможное значение функции F, которое можно получить перестановкой элементов массива А.

Пример входных данных:
3
11 13 17

Ответ на пример:
28

Пояснение:
 F(11 13 17) = 26
 F(11 17 13) = 6
 F(13 11 17) = 28
 F(13 17 11) = 6
 F(17 11 13) = 28
 F(17 13 11) = 26